<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.thedyps.springbootangular.admin.RegGoodsDAO">
    <select id="getCpuBrand" resultType="String">
        SELECT DISTINCT brand FROM CPU
    </select>

    <select id="getCpuKind" resultType="String" parameterType="String">
        SELECT DISTINCT kind FROM CPU WHERE brand = #{param}
    </select>

    <select id="getCpu" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegPartsVO" parameterType="map">
        SELECT code, name FROM CPU WHERE brand = #{brand} AND kind = #{kind}
    </select>

    <select id="getCpuInfo" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegInfoVO" parameterType="String">
        SELECT price, grade FROM CPU WHERE code = #{param}
    </select>

    <select id="getRamBrand" resultType="String">
        SELECT DISTINCT brand FROM RAM
    </select>

    <select id="getRamSpeed" resultType="String" parameterType="String">
        SELECT DISTINCT speed FROM RAM WHERE brand = #{param}
    </select>

    <select id="getRam" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegPartsVO" parameterType="map">
        SELECT code, name FROM RAM WHERE brand = #{brand} AND speed = #{speed}
    </select>

    <select id="getRamInfo" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegInfoVO" parameterType="String">
        SELECT price, grade FROM RAM WHERE code = #{param}
    </select>

    <select id="getGraBrand" resultType="String">
        SELECT DISTINCT brand FROM GRAPHIC
    </select>

    <select id="getGraKind" resultType="String" parameterType="String">
        SELECT DISTINCT kind FROM GRAPHIC WHERE brand = #{param}
    </select>

    <select id="getGra" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegPartsVO" parameterType="map">
        SELECT code, name FROM GRAPHIC WHERE brand = #{brand} and kind = #{kind}
    </select>

    <select id="getGraInfo" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegInfoVO" parameterType="String">
        SELECT price, grade FROM GRAPHIC WHERE code = #{param}
    </select>

    <select id="getHddBrand" resultType="String">
        SELECT DISTINCT brand FROM HDD
    </select>

    <select id="getHddSpeed" resultType="String" parameterType="String">
        SELECT DISTINCT speed FROM HDD WHERE brand = #{param}
    </select>

    <select id="getHdd" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegPartsVO" parameterType="map">
        SELECT code, name FROM HDD WHERE brand = #{brand} AND speed = #{speed}
    </select>

    <select id="getHddInfo" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegInfoVO" parameterType="String">
        SELECT price, grade FROM HDD WHERE code = #{param}
    </select>

    <select id="getSsdBrand" resultType="String">
        SELECT DISTINCT brand FROM SSD
    </select>

    <select id="getSsdSpeed" resultType="String" parameterType="String">
        SELECT DISTINCT speed FROM SSD WHERE brand = #{param}
    </select>

    <select id="getSsd" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegPartsVO" parameterType="map">
        SELECT code, name FROM SSD WHERE brand = #{brand} AND speed = #{speed}
    </select>

    <select id="getSsdInfo" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegInfoVO" parameterType="String">
        SELECT price, grade FROM SSD WHERE code = #{param}
    </select>

    <select id="getMainBrand" resultType="String">
        SELECT DISTINCT brand FROM MAINBOARD
    </select>

    <select id="getMain" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegPartsVO" parameterType="String">
        SELECT code, name FROM MAINBOARD WHERE brand = #{param}
    </select>

    <select id="getMainInfo" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegInfoVO" parameterType="String">
        SELECT price, grade FROM MAINBOARD WHERE code = #{param}
    </select>

    <select id="getOs" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegPartsVO">
        SELECT code, name FROM OS
    </select>

    <select id="getOsInfo" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegInfoVO" parameterType="String">
        SELECT price FROM OS WHERE code = #{param}
    </select>
    
    <select id="getLatestCode" resultType="String">
        SELECT code FROM (
          SELECT ROWNUM rnum, result.* FROM (
            SELECT code FROM PC ORDER BY code DESC
          ) result
        ) WHERE rnum = 1
    </select>

    <select id="getImgList" resultType="xyz.thedyps.springbootangular.admin.adminVO.ImgListVO" parameterType="String">
        SELECT imgorder, imgpath FROM BRANDIMAGE WHERE brand = #{param}
    </select>

    <insert id="regGoods" parameterType="map">
        INSERT INTO PC (code, cpu, ram, graphic, hdd, ssd, mainboard, os, brand, type, price, grade, deliveryprice, stock)
        VALUES (#{code}, #{cpu}, #{ram}, #{gra}, #{hdd}, #{ssd}, #{main}, #{os}, #{brand}, #{type}, #{sumPrice}, #{avgGrade},
        #{deliPrice}, #{stock})
    </insert>

    <insert id="regImg" parameterType="map">
        INSERT INTO PCIMAGE VALUES (#{pccode}, #{imgorder}, #{imgpath})
    </insert>

    <select id="getRegCount" parameterType="xyz.thedyps.springbootangular.admin.adminVO.RegFilterVO" resultType="int">
    SELECT
    count(*)
    FROM PC P
        <where>
            <if	test="type != 'All'">
                P.type = #{type, javaType=String}
            </if>
            <if test="code != null and code != ''" >
                AND P.code LIKE '%' || #{code, javaType=String} || '%'
            </if>
            <if test="brand != null and brand != ''">
                AND P.brand LIKE '%' || #{brand, javaType=String} || '%'
            </if>
        </where>
    </select>

    <select id="getRegGoods" parameterType="xyz.thedyps.springbootangular.admin.adminVO.RegFilterVO" resultType="xyz.thedyps.springbootangular.admin.adminVO.RegGoodsVO">
    SELECT * FROM (
    SELECT ROWNUM rnum, result.* FROM (
    SELECT P.code pc_code, P.brand pc_brand, P.type pc_type,
    P.price pc_price, P.DELIVERYPRICE pc_deliprice, P.grade pc_grade, P.stock pc_stock,
    C.code cpu_code, C.name cpu_name,
    R.code ram_code, R.name ram_name,
    M.code main_code, M.name main_name,
    H.code hdd_code, H.name hdd_name,
    S.code ssd_code, S.name ssd_name,
    G.code gra_code, G.name gra_name,
    O.code os_code, O.name os_name
    FROM PC P
    JOIN CPU C ON P.cpu = C.code
    JOIN RAM R ON P.ram = R.code
    JOIN MAINBOARD M ON P.mainboard = M.code
    LEFT OUTER JOIN HDD H ON P.hdd = H.code
    LEFT OUTER JOIN SSD S ON P.ssd = S.code
    JOIN GRAPHIC G ON P.graphic = G.code
    JOIN OS O ON P.os = O.code
        <where>
            <if	test="type != 'All'">
                P.type = #{type, javaType=String}
            </if>
            <if test="code != null and code != ''" >
                AND P.code LIKE '%' || #{code, javaType=String} || '%'
            </if>
            <if test="brand != null and brand != ''">
                AND P.brand LIKE '%' || #{brand, javaType=String} || '%'
            </if>
        </where>
        ) result
        ) WHERE rnum BETWEEN #{start,javaType=int} AND #{end,javaType=int}
    </select>

    <insert id="uptGoods" parameterType="map">
        UPDATE PC SET cpu=#{cpu}, ram=#{ram}, graphic=#{gra}, hdd=#{hdd}, ssd=#{ssd}, mainboard= #{main}, os=#{os}, brand=#{brand},
        type=#{type}, price=#{sumPrice}, grade=#{avgGrade}, deliveryprice= #{deliPrice}, stock=#{stock} WHERE code=#{code}
    </insert>

    <insert id="uptImg" parameterType="map">
        UPDATE PCIMAGE SET imgpath=#{imgpath} WHERE pccode=#{pccode} AND imgorder=#{imgorder}
    </insert>

    <delete id="delGoods" parameterType="String">
        DELETE FROM PC WHERE code = #{param}
    </delete>
</mapper>
buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "com.moowork.node"


group = 'xyz.thedyps'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	mavenLocal()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile('com.oracle:ojdbc8:12.2.0.1')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')
	compile('org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16')
}

node {
	yarnVersion  = '1.3.2'
	nodeModulesDir = file("frontend")
}

task buildClientDev(type: YarnTask) {
	group = 'build'
	description = 'Compile client side assets for development'
	args = ['run', 'buildDev']
}

task buildClient(type: YarnTask) {
	group = 'build'
	description = 'Compile client side assets for production'
	args = ['run', 'build']
}

task buildWatch(type: YarnTask) {
	group = 'application'
	description = 'Builds and watches the client side assets for rebuilding'
}

bootRun.dependsOn(buildClientDev)
jar.dependsOn(buildClient)